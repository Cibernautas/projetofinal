
#########################################   Codigos.gs

function doPost(e) {
  try {
    const SPREADSHEET_ID = "12IQiTtVMCg2ie6GEgCdTnk-NdZdBE9Gs_h3gXXGSZWs";
    const SHEET_NAME = "DENUNCIA";
    const MIDIA_SHEET_NAME = "MIDIA";
    const DRIVE_FOLDER_ID = "1zaJ0UXaoediou4GQQp9YS_LSAwYBtlFU";

    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(SHEET_NAME);
    const midiaSheet = ss.getSheetByName(MIDIA_SHEET_NAME);
    const folder = DriveApp.getFolderById(DRIVE_FOLDER_ID);
    const params = e.parameter;

    Logger.log(JSON.stringify(params));

    let midiaLinks = [];
    for (let key in params) {
      if (key.startsWith("MidiaBase64_")) {
        const base64 = params[key].split(',')[1];
        const blob = Utilities.newBlob(Utilities.base64Decode(base64), "image/jpeg", `foto_${Date.now()}.jpg`);
        const file = folder.createFile(blob);
        file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
        midiaLinks.push(getDirectDownloadLink(file));
      }
    }

    let assinaturaURL = "Sem assinatura";
    if (params.AssinaturaBase64 && params.AssinaturaBase64.includes(",")) {
      const base64Data = params.AssinaturaBase64.split(',')[1];
      const blob = Utilities.newBlob(Utilities.base64Decode(base64Data), "image/png", `assinatura_${params.Nome}_${Date.now()}.png`);
      const file = folder.createFile(blob);
      file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
      assinaturaURL = getDirectDownloadLink(file);
    }

    const pdfURL = gerarDenunciaPDF(params, assinaturaURL, midiaLinks); // chamada externa

    const novaLinha = [
      new Date(),
      params.Nome || "",
      params.Documento || "",
      params.Localizacao || "",
      params.TipoProblema || "",
      params.DescricaoProblema || "",
      assinaturaURL,
      pdfURL
    ];

    sheet.appendRow(novaLinha);
    const rowIndex = sheet.getLastRow();

    if (midiaLinks.length > 0) {
      midiaSheet.appendRow([rowIndex, ...midiaLinks]);
    }

    // Envio de e-mail fixo
    const destinatario = "marcosfeitosapalmas2@gmail.com";
    const assunto = `Nova Denúncia - ${params.TipoProblema || "Problema não especificado"}`;
    const corpo = `
Olá,

Uma nova denúncia foi registrada:

📌 Nome: ${params.Nome || "Não informado"}

📍 Localização: ${params.Localizacao || "Não informado"}

📄 Tipo de Problema: ${params.TipoProblema || "Não informado"}


📝 Descrição:
${params.DescricaoProblema || "Não informado"}

📎 Link do PDF:
${pdfURL}

    `;

    MailApp.sendEmail(destinatario, assunto, corpo);

    return ContentService.createTextOutput(JSON.stringify({
      status: "success",
      message: "Denúncia registrada e e-mail enviado!",
      pdf: pdfURL
    })).setMimeType(ContentService.MimeType.JSON);

  } catch (err) {
    return ContentService.createTextOutput(JSON.stringify({
      status: "error",
      message: err.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

function getDirectDownloadLink(file) {
  return "https://drive.google.com/uc?export=download&id=" + file.getId();
}


#########################################   pdf.gs

function gerarDenunciaPDF(data, assinaturaURL, midiaLinks) {
  const folderId = "1zaJ0UXaoediou4GQQp9YS_LSAwYBtlFU";
  const templateId = "1OfdeHjlEZ8LuWLG4zOAFcWF5mtMuZzNWkFBFjPQeWd0";

  const copy = DriveApp.getFileById(templateId).makeCopy(`Denúncia - ${data.Nome}`, DriveApp.getFolderById(folderId));
  const presentation = SlidesApp.openById(copy.getId());
  let slide = presentation.getSlides()[0];

  let y = 30;
  const margin = 30;
  const larguraCaixa = 540;
  const maxY = 750;

  function adicionarBloco(titulo, conteudo, espacoApos = 10) {
    if (y + 40 > maxY) {
      slide = presentation.appendSlide(SlidesApp.PredefinedLayout.BLANK);
      y = 30;
    }
    const tituloShape = slide.insertTextBox(titulo, margin, y, larguraCaixa, 20);
    tituloShape.getText().getTextStyle().setBold(true).setFontSize(18);
    y += 22;

    const conteudoShape = slide.insertTextBox(conteudo, margin, y, larguraCaixa, 400);
    y += conteudoShape.getHeight() + espacoApos;
  }

  adicionarBloco("DENÚNCIA DE INFRAESTRUTURA URBANA", `Data de Envio: ${new Date().toLocaleString()}`, 12);

  const dadosDenuncia = `
Nome: ${data.Nome}
Documento: ${data.Documento}
Localização: ${data.Localizacao}
Tipo de Problema: ${data.TipoProblema}
Descrição: ${data.DescricaoProblema}
  `;
  adicionarBloco("DADOS DA DENÚNCIA", dadosDenuncia);

  if (midiaLinks.length > 0) {
    adicionarBloco("MÍDIAS ENVIADAS", midiaLinks.join("\n"));
  }

  if (assinaturaURL && assinaturaURL !== "Sem assinatura") {
    if (y + 80 > maxY) {
      slide = presentation.appendSlide(SlidesApp.PredefinedLayout.BLANK);
      y = 30;
    }
    const tituloShape = slide.insertTextBox("ASSINATURA", margin, y, larguraCaixa, 20);
    tituloShape.getText().getTextStyle().setBold(true).setFontSize(18);
    y += 22;
    const blob = UrlFetchApp.fetch(assinaturaURL).getBlob();
    slide.insertImage(blob, margin, y, 200, 60);
    y += 65;
  }

  presentation.saveAndClose();
  const pdf = DriveApp.getFileById(presentation.getId()).getAs("application/pdf");
  const folder = DriveApp.getFolderById(folderId);
  const pdfFile = folder.createFile(pdf);
  pdfFile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  return "https://drive.google.com/uc?export=download&id=" + pdfFile.getId();
}
#########################################   getdirect.gs

function getDirectDownloadLink(file) {
  return "https://drive.google.com/uc?export=download&id=" + file.getId();
}


#########################################   consultarMidias.gs

function myFunction() {
  function consultarMidias(idRegistro) {
  const PLANILHA_ID = "12IQiTtVMCg2ie6GEgCdTnk-NdZdBE9Gs_h3gXXGSZWs";
  const midiasSheet = SpreadsheetApp.openById(PLANILHA_ID).getSheetByName("MIDIA");
  const dados = midiasSheet.getDataRange().getValues();

  for (let i = 1; i < dados.length; i++) {
    if (dados[i][0] == idRegistro) {
      return dados[i].slice(1).filter(String).join(" | ");
    }
  }

  return "Sem mídias encontradas";
}

}
